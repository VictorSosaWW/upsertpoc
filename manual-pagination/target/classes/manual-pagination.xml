<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:mulerequester="http://www.mulesoft.org/schema/mule/mulerequester" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
    <db:mysql-config name="MySQL_Configuration" host="localhost" port="3306" user="root" password="root" database="pocbatch" doc:name="MySQL Configuration"/>
    <queued-asynchronous-processing-strategy name="Queued_Asynchronous_Processing_Strategy" maxThreads="25" doc:name="Queued Asynchronous Processing Strategy"/>
    <flow name="buildingQueryFlow">
        <file:inbound-endpoint name="File" path="/home/victor/pocs/batch/toProcess/input" moveToDirectory="/home/victor/pocs/batch/toProcess/output" responseTimeout="10000" doc:name="File" mimeType="application/csv" pollingFrequency="600000">
            <file:filename-regex-filter pattern=".*csv" caseSensitive="true"/>
        </file:inbound-endpoint>
        <dw:transform-message doc:name="Transform Message" metadata:id="7f76cb52-4966-4faa-9960-1b28c7d3437f">
            <dw:input-payload doc:sample="C:\Users\eeepland\Desktop\poc_batch\csvs\super_big_sample.csv" mimeType="application/csv"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map {
	stmt: "INSERT INTO superbig VALUES ('" ++ $.Column_1_In_Row_0 ++ "','" ++ $.Column_2_In_Row_0 ++ "','" ++ $.Column_3_In_Row_0 ++ "','" ++ $.Column_4_In_Row_0 ++ "','" ++ $.Column_5_In_Row_0 ++ "','" ++ $.Column_6_In_Row_0 ++ "','" ++ $.Column_7_In_Row_0 ++ "','" ++ $.Column_8_In_Row_0 ++ "','" ++ $.Column_9_In_Row_0 ++ "','" ++ $.Column_10_In_Row_0 ++ "','" ++ $.Column_11_In_Row_0 ++ "','" ++ $.Column_12_In_Row_0 ++ "','" ++ $.Column_13_In_Row_0 ++ "','" ++ $.Column_14_In_Row_0 ++ "','" ++ $.Column_15_In_Row_0 ++ "','" ++ $.Column_16_In_Row_0 ++ "','" ++ $.Column_17_In_Row_0 ++ "','" ++ $.Column_18_In_Row_0 ++ "','" ++ $.Column_19_In_Row_0 ++ "','" ++ $.Column_20_In_Row_0 ++ "','" ++ $.Column_21_In_Row_0 ++ "','" ++ $.Column_22_In_Row_0 ++ "','" ++ $.Column_23_In_Row_0 ++ "','" ++ $.Column_24_In_Row_0 ++ "','" ++ $.Column_25_In_Row_0 ++ "','" ++ $.Column_26_In_Row_0 ++ "','" ++ $.Column_27_In_Row_0 ++ "','" ++ $.Column_28_In_Row_0 ++ "','" ++ $.Column_29_In_Row_0 ++ "','" ++ $.Column_30_In_Row_0 ++ "','" ++ $.Column_31_In_Row_0 ++ "','" ++ $.Column_32_In_Row_0 ++ "','" ++ $.Column_33_In_Row_0 ++ "','" ++ $.Column_34_In_Row_0 ++ "','" ++ $.Column_35_In_Row_0 ++ "','" ++ $.Column_36_In_Row_0 ++ "','" ++ $.Column_37_In_Row_0 ++ "','" ++ $.Column_38_In_Row_0 ++ "','" ++ $.Column_39_In_Row_0 ++ "','" ++ $.Column_40_In_Row_0 ++ "') " ++ "ON DUPLICATE KEY UPDATE Column_2_In_Row_0 = VALUES(Column_2_In_Row_0), Column_3_In_Row_0 = VALUES(Column_3_In_Row_0), Column_4_In_Row_0 = VALUES(Column_4_In_Row_0), Column_5_In_Row_0 = VALUES(Column_5_In_Row_0), Column_6_In_Row_0 = VALUES(Column_6_In_Row_0), Column_7_In_Row_0 = VALUES(Column_7_In_Row_0), Column_8_In_Row_0 = VALUES(Column_8_In_Row_0), Column_9_In_Row_0 = VALUES(Column_9_In_Row_0), Column_10_In_Row_0 = VALUES(Column_10_In_Row_0), Column_11_In_Row_0 = VALUES(Column_11_In_Row_0), Column_12_In_Row_0 = VALUES(Column_12_In_Row_0), Column_13_In_Row_0 = VALUES(Column_13_In_Row_0), Column_14_In_Row_0 = VALUES(Column_14_In_Row_0), Column_15_In_Row_0 = VALUES(Column_15_In_Row_0), Column_16_In_Row_0 = VALUES(Column_16_In_Row_0), Column_17_In_Row_0 = VALUES(Column_17_In_Row_0), Column_18_In_Row_0 = VALUES(Column_18_In_Row_0), Column_19_In_Row_0 = VALUES(Column_19_In_Row_0), Column_20_In_Row_0 = VALUES(Column_20_In_Row_0), Column_21_In_Row_0 = VALUES(Column_21_In_Row_0), Column_22_In_Row_0 = VALUES(Column_22_In_Row_0), Column_23_In_Row_0 = VALUES(Column_23_In_Row_0), Column_24_In_Row_0 = VALUES(Column_24_In_Row_0), Column_25_In_Row_0 = VALUES(Column_25_In_Row_0), Column_26_In_Row_0 = VALUES(Column_26_In_Row_0), Column_27_In_Row_0 = VALUES(Column_27_In_Row_0), Column_28_In_Row_0 = VALUES(Column_28_In_Row_0), Column_29_In_Row_0 = VALUES(Column_29_In_Row_0), Column_30_In_Row_0 = VALUES(Column_30_In_Row_0), Column_31_In_Row_0 = VALUES(Column_31_In_Row_0), Column_32_In_Row_0 = VALUES(Column_32_In_Row_0), Column_33_In_Row_0 = VALUES(Column_33_In_Row_0), Column_34_In_Row_0 = VALUES(Column_34_In_Row_0), Column_35_In_Row_0 = VALUES(Column_35_In_Row_0), Column_36_In_Row_0 = VALUES(Column_36_In_Row_0), Column_37_In_Row_0 = VALUES(Column_37_In_Row_0), Column_38_In_Row_0 = VALUES(Column_38_In_Row_0), Column_39_In_Row_0 = VALUES(Column_39_In_Row_0), Column_40_In_Row_0 = VALUES(Column_40_In_Row_0);" ++ p('line.separator')
} as :iterator]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload.getClass().getName()]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload as :iterator]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload.getClass().getName()]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="counter" value="#[0]" doc:name="Counter Variable"/>
        <foreach counterVariableName="index" batchSize="10000" doc:name="For Each">
            <combine-collections-transformer doc:name="Combine Collections"/>
            <set-variable variableName="counter" value="#[counter+1]" doc:name="Increase Counter Variable"/>
            <set-variable variableName="bulkQuery" value="#[new java.lang.StringBuilder()]" doc:name="Query Builder Variable"/>
            <transactional action="ALWAYS_BEGIN" doc:name="Transactional">
                <collection-splitter doc:name="Collection Splitter"/>
                <set-variable variableName="bulkQuery" value="#[flowVars.bulkQuery.append(payload)]" doc:name="Query Variable"/>
            </transactional>
            <db:bulk-execute config-ref="MySQL_Configuration" doc:name="Database"><![CDATA[#[flowVars.bulkQuery.toString()]]]></db:bulk-execute>
        </foreach>
        <logger message="#[flowVars.counter] records in batch" level="INFO" doc:name="Logger"/>



    </flow>

</mule>
